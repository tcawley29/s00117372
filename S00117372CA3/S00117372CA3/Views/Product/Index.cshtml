@*@model PagedList.IPagedList<S00117372CA3.Product>*@
@*@model Tuple<PagedList.IPagedList<S00117372CA3.Product>, IEnumerable<S00117372CA3.Order>>*@
@model S00117372CA3.Controllers.ProductViewModel
@{
    ViewBag.Title = "Index";
}

<h2><br /><br />Index<br /><br /></h2>

<table class="table table-striped table-condensed table-hover">
    <tr>
        <th class="span1">
            @Html.DisplayNameFor(model => model.Products.First().ProductName)
        </th>
        <th class="span2">
            @Html.DisplayNameFor(model => model.Products.First().Supplier.CompanyName)
        </th>
        <th class="span3">
            @Html.DisplayNameFor(model => model.Products.First().Category.CategoryName)
        </th>
        <th class="span4">
            @Html.DisplayNameFor(model => model.Products.First().QuantityPerUnit)
        </th>
        <th class="span5">
            @Html.DisplayNameFor(model => model.Products.First().UnitPrice)
        </th>
        <th class="span6">
            @Html.DisplayNameFor(model => model.Products.First().UnitsInStock)
        </th>
        <th class="span7">
            @Html.DisplayNameFor(model => model.Products.First().UnitsOnOrder)
        </th>
        <th class="span8">
            @Html.DisplayNameFor(model => model.Products.First().ReorderLevel)
        </th>
        <th class="span9">
            @Html.DisplayNameFor(model => model.Products.First().Discontinued)
        </th>
        <th></th>
    </tr>

@foreach (var item in Model.Products) {
    <tr>
        <td>
            @Html.DisplayFor(modelItem => item.ProductName)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Supplier.CompanyName)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Category.CategoryName)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.QuantityPerUnit)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.UnitPrice)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.UnitsInStock)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.UnitsOnOrder)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.ReorderLevel)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Discontinued)
        </td>
        <td>
            @Html.ActionLink("Edit", "Edit", new { id=item.ProductID }, new { @class="btn btn-xs btn-info" }) |
            @Ajax.ActionLink("Details", "Sligo", new { id=item.ProductID }, new AjaxOptions { UpdateTargetId = "searchResult", InsertionMode = InsertionMode.Replace, HttpMethod = "GET" }, new { @class = "btn btn-xs btn-success" }) |
            @Html.ActionLink("Delete", "Delete", new { id=item.ProductID }, new { @class="btn btn-xs btn-danger" })
        </td>
    </tr>
}

</table>

<div class="navbar navbar-fixed-bottom">
    <div class="text-center">
    Page @(Model.Products.PageCount < Model.Products.PageNumber ? 0 : Model.Products.PageNumber) of @Model.Products.PageCount
    @if (Model.Products.HasPreviousPage)
    {
        @Html.ActionLink("<<", "Index", new { page = 1})
        @Html.Raw(" ");
        @Html.ActionLink("< Prev", "Index", new {page = Model.Products.PageNumber - 1})
    }
    else{
     @:<<
     @Html.Raw(" ");
        @:< Prev   
    }

    @if (Model.Products.HasNextPage)
    {
        @Html.ActionLink("Next >", "Index", new {page = Model.Products.PageNumber + 1})
        @Html.Raw(" "); 
        @Html.ActionLink(">>", "Index", new {page = Model.Products.PageCount})
    }
    else{
     @:Next >
     @Html.Raw(" ")
@:>>   
    }
</div>
</div>

<div id="searchResult">
    @*@Html.Partial("_Orders");*@
</div>

@Scripts.Render("~/bundles/jquery")
    <script src="@Url.Content("~/Scripts/jquery.unobtrusive-ajax.js")" type="text/javascript"></script>